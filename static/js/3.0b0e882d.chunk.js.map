{"version":3,"sources":["styles/ProfileInfo.module.css","styles/Profile.module.css","styles/Post.module.css","styles/ProfileStatus.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/AddPostsReduxForm.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/ProfileStatus/ProfileStatusWithHooks.tsx","components/Profile/ProfileDataForm.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js"],"names":["module","exports","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_getPrototypeOf","getPrototypeOf","_typeof","obj","Symbol","iterator","constructor","prototype","_possibleConstructorReturn","self","call","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","e","result","Super","NewTarget","this","arguments","apply","Post","React","memo","className","style","avatar","src","alt","post","counter","likeCount","likes","likeButton","AddPostForm","handleSubmit","onSubmit","createField","Textarea","required","AddPostReduxForm","reduxForm","form","MyPosts","postElement","postsData","map","posts","id","dispatch","useDispatch","values","ProfileActions","addPost","newPostText","MyPostsContainer","connect","state","profilePage","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","profileStatusWrapper","spanStyle","onDoubleClick","onChange","currentTarget","value","autoFocus","onBlur","updateStatus","placeholder","ProfileDataReduxForm","error","profile","fullNameBlock","Input","aboutMeBlock","lookingForAJobBlock","undefined","type","keys","contacts","contactBlockForm","ProfileInfo","isOwner","savePhoto","Preloader","profileInfoContainer","profileInfo","profilePhoto","photos","large","userAvatar","sendFileButton","files","initialValues","formData","saveProfile","onEditMode","ProfileData","profileDataBlock","editProfileInfoBtn","onClick","fullName","aboutMe","lookingForAJob","skills","lookingForAJobDescription","contactsBlock","contactTitle","contactValue","Contacts","Profile","mainContent","ProfileContainer","subClass","superClass","create","protoProps","staticProps","userId","match","params","authorizedUserId","getProfile","getStatus","history","push","updateProfile","prevProps","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.0b0e882d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusContainer\":\"ProfileInfo_statusContainer__287f4\",\"profileInfo\":\"ProfileInfo_profileInfo__hb7xu\",\"sendFileButton\":\"ProfileInfo_sendFileButton__Dj4f6\",\"lookingForAJobBlock\":\"ProfileInfo_lookingForAJobBlock__Gr_zx\",\"aboutMeBlock\":\"ProfileInfo_aboutMeBlock__2w_Mq\",\"fullNameBlock\":\"ProfileInfo_fullNameBlock__1DdzO\",\"skills\":\"ProfileInfo_skills__1MQDZ\",\"contactsBlock\":\"ProfileInfo_contactsBlock__-X8S7\",\"editProfileInfoBtn\":\"ProfileInfo_editProfileInfoBtn__3GApz\",\"profileDataBlock\":\"ProfileInfo_profileDataBlock__2Hac0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContent\":\"Profile_mainContent__1wIGk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Post_avatar__3XMBm\",\"counter\":\"Post_counter__3qy7M\",\"likeCount\":\"Post_likeCount__2HQp7\",\"likeButton\":\"Post_likeButton__3jUJv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanStyle\":\"ProfileStatus_spanStyle__23sGa\"};","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import React from 'react'\nimport style from '../../../../styles/Post.module.css'\n\n\n export type PostPropsType = {\n    post: string\n    likes: number\n }\nexport const Post = React.memo((props: PostPropsType) => {\n    return (\n            <div>\n                <div className={style.avatar}>\n                <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcR5W2tli7-nT4GT1zqSkZziPAeOoHuZUwljrQ&usqp=CAU\" alt=\"user-avatar\"/>\n                <div>\n                    {props.post} \n                    <div className={style.counter}>\n                    <button className={style.likeCount}>{props.likes}</button>\n                    <button className={style.likeButton}>Like</button>\n                    </div>\n                </div>\n                </div>\n            </div>\n        )\n    })\n","import React from 'react'\nimport { InjectedFormProps, reduxForm } from 'redux-form'\nimport { required } from '../../../redux/handlers/validators/validators'\nimport { createField, Textarea } from '../../common/FormControl/FormControls';\n\nexport type addPostFormType = {\n    newPostText: string\n}\n\n\ntype PostsFormValuesTypeKeys = Extract<keyof addPostFormType, string>\n\nexport const AddPostForm: React.FC<InjectedFormProps<addPostFormType>> = React.memo(({handleSubmit}) => {\n    return (\n       <form onSubmit={handleSubmit}>\n            <div>\n            {createField<PostsFormValuesTypeKeys>('Type your post here', 'newPostText', Textarea, [required])}\n            </div>\n            <div>\n                <button>Post</button>\n            </div>\n       </form>\n    )\n})\n\n//-----------  HOC for the post redux form  ---------------\nexport const AddPostReduxForm = reduxForm<addPostFormType>({form: 'postTextarea'})(AddPostForm)","import React from 'react';\nimport { PostsDataType } from '../../../types/types';\nimport {Post} from './Post/Post'\nimport { addPostFormType, AddPostReduxForm } from './AddPostsReduxForm';\nimport { useDispatch } from 'react-redux';\nimport { ProfileActions } from '../../../redux/profile-reducer';\n\n\nexport type myPostsMapType = {\n    postsData: Array<PostsDataType>\n}\nexport type dispatchToPropsType = {\n  addPost: (newPostText: string) => void\n}\n\n\n\nexport const MyPosts = React.memo<myPostsMapType & dispatchToPropsType>((props) => {\n\n  let postElement = props.postsData.map(posts =>\n  <Post key={posts.id} post={posts.post} likes={posts.likes}/> \n)\n//--- function for adding new post -----\nconst dispatch = useDispatch()\nconst addNewPost = (values: addPostFormType) => {\n  dispatch(ProfileActions.addPost(values.newPostText))\n}\n    \n  return (\n    <div>\n        <h5>Previous Posts</h5>\n        {postElement} \n        <div>\n        <h5>New Post</h5>\n        <AddPostReduxForm onSubmit={addNewPost}/>\n      </div>\n    </div>\n    )\n  }\n)","import {dispatchToPropsType, MyPosts, myPostsMapType} from './MyPosts'\nimport {connect} from 'react-redux'\nimport { StateType } from '../../../redux/redux-store'\nimport { ProfileActions } from '../../../redux/profile-reducer'\n\n \nlet mapStateToProps = (state: StateType) => {\n  return {\n    postsData: state.profilePage.postsData,\n  }\n}\n\n\nconst MyPostsContainer = connect<myPostsMapType, dispatchToPropsType, {}, StateType>(mapStateToProps, \n  {addPost: ProfileActions.addPost})(MyPosts)\nexport default MyPostsContainer;","import React, { ChangeEvent, useState, useEffect } from 'react'\nimport style from '../../../styles/ProfileStatus.module.css'\n\nexport type statusProps = {\n    status: string\n    updateStatus: (status: string) => void\n}\n\nexport const ProfileStatusWithHooks = React.memo((props: statusProps) => {\n\n  const [editMode, setEditMode] = useState<boolean>(false)\n  const [status, setStatus] = useState<string>(props.status)\n  \n  const changeStatus = (e: ChangeEvent<HTMLInputElement>) => {\n        setStatus(e.currentTarget.value)\n  }\n  const activateEditMode = () => setEditMode(true)\n  \n  const deactivateMode = () => {\n        setEditMode(false)\n    props.updateStatus(status)\n }\n    \n    useEffect(() => {\n        setStatus(props.status)\n    }, [props.status]) \n   \n        return (\n        <div className={style.profileStatusWrapper}>\n            {!editMode &&\n             <div className={style.spanStyle}>\n               <b>Status: </b> <span onDoubleClick={activateEditMode}>{props.status}</span>\n            </div>\n            }\n            {editMode &&\n                <input \n                    onChange={changeStatus}\n                    autoFocus={true}\n                    onBlur={deactivateMode} \n                    value={status} \n                    placeholder=\"what are you thinking about?\"/>\n         \n            }\n        </div>\n    )\n})\n","import React from 'react'\nimport style from '../../styles/ProfileInfo.module.css'\nimport { createField, getStringKeys, Input } from '../common/FormControl/FormControls'\nimport { InjectedFormProps, reduxForm } from 'redux-form'\nimport { UserProfileType } from '../../types/types'\n\n\ntype PropsType = {\n    profile: UserProfileType\n}\ntype ProfileDataFormKeys = getStringKeys<UserProfileType>\n\nconst ProfileDataForm: React.FC<InjectedFormProps<UserProfileType, PropsType> & PropsType> = ({handleSubmit, error, profile}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n        <div><button>Save</button></div>\n        {\n            error && <div>{error}</div>\n        }\n        <div className={style.fullNameBlock}>\n            <b>Full name:</b> {createField<ProfileDataFormKeys>('Full name', 'fullName', Input, [] )}\n        </div>\n        <div className={style.aboutMeBlock}>\n            <b>About me: </b>{createField<ProfileDataFormKeys>('About me', 'aboutMe', Input, [] )}\n        </div>\n        <div className={style.lookingForAJobBlock}>\n                <b>Looking for a job:</b> \n                    {createField<ProfileDataFormKeys>(undefined, 'lookingForAJob', Input, [], {type: 'checkbox'})}\n        </div>\n        <div>\n            <b>Professionals skills: </b>\n                {createField<ProfileDataFormKeys>('Professional skills', 'lookingForAJobDescription', Input, [] )}\n        </div>\n        <div>\n            <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\n                return <div className={style.contactBlockForm} key={key}>\n                    <b>{key}:{createField(key, 'contacts.' + key, Input, [] )}</b>\n                </div>\n            })}\n        </div>\n        </form>\n    )\n}\n\nexport const ProfileDataReduxForm = reduxForm<UserProfileType, PropsType>({form: 'edit-profile'})(ProfileDataForm)\n","import React, { ChangeEvent, useState } from 'react'\nimport { Preloader } from '../../common/Preloader/Preloader'\nimport { ProfileStatusWithHooks } from '../ProfileStatus/ProfileStatusWithHooks'\nimport style from '../../../styles/ProfileInfo.module.css'\nimport userAvatar from '../../../assets/images/userAvatar.jpg'\nimport { ProfileDataReduxForm } from '../ProfileDataForm'\nimport { contactsType, UserProfileType } from '../../../types/types'\nimport { useDispatch } from 'react-redux'\nimport { saveProfile } from '../../../redux/profile-reducer'\n\n\ntype ContactsType = {\n    contactTitle: string, \n    contactValue: string\n}\nexport type profileInfoType = {\n    profile: UserProfileType | null\n    status: string\n    isOwner: boolean\n    updateStatus: (status: string) => void\n    saveProfile: (profile: UserProfileType) => Promise<any>\n    savePhoto: (file: File) => void\n}\ntype profileDataProps = {\n    profile: UserProfileType\n    isOwner: boolean\n    onEditMode: () => void\n}\n\nexport const ProfileInfo: React.FC<profileInfoType> = ({profile, status, updateStatus, isOwner, savePhoto}) => {\n    \n    const [editMode, setEditMode] = useState<boolean>(false)\n    const dispatch = useDispatch()\n    \n    if(!profile) {\n        return <Preloader/>\n    }\n\n    const sendFileHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        if(e.target.files?.length) {\n            savePhoto(e.target.files[0])\n        }\n    }\n    const onDataFormSubmit = (formData: UserProfileType) => {\n        dispatch(saveProfile(formData))\n        setEditMode(false)\n    }\n\n    return (  \n        <div className={style.profileInfoContainer}>\n            <div className={style.profileInfo}>\n                <img className={style.profilePhoto} src={profile.photos.large || userAvatar} alt=\"profile\"/>\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n            </div>\n            <div className={style.sendFileButton}>\n                    {isOwner && <input type=\"file\" onChange={sendFileHandler} />}\n                </div>\n            {editMode \n                ? <ProfileDataReduxForm initialValues={profile} onSubmit={onDataFormSubmit} profile={profile} /> \n                : <ProfileData profile={profile} isOwner={isOwner} onEditMode={() => setEditMode(true)}/>\n            }\n        </div>\n    )\n}\n\nconst ProfileData: React.FC<profileDataProps> = ({profile, isOwner, onEditMode}) => {\n    return (\n        <div className={style.profileDataBlock}>\n        {\n            isOwner && <div><button className={style.editProfileInfoBtn} \n            onClick={onEditMode}>Edit</button></div>\n        }\n        <div className={style.fullNameBlock}>\n            <b>Full name:</b> {profile.fullName}\n        </div>\n        <div className={style.aboutMeBlock}>\n            <b>About me: </b>{profile.aboutMe}\n        </div>\n        <div className={style.lookingForAJobBlock}>\n                <b>Looking for a job:</b> {profile.lookingForAJob ? `I'm opened for offers` : \"Currently working\"} \n \n        </div>\n        <div className={style.skills}><b>Professionals skills: </b>{profile.lookingForAJobDescription}</div>\n        <div className={style.contactsBlock}>\n            <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\n                return <Contacts  key={key} contactTitle={key} contactValue={profile.contacts[key as keyof contactsType]} />\n            })}\n        </div>\n    </div>\n    )\n}\n\n\nexport const Contacts: React.FC<ContactsType> = ({contactTitle, contactValue}) => {\n    return <div className={style.contactsBlock}><b>{contactTitle}</b>: {contactValue}</div>\n}","import React from \"react\";\nimport style from \"../../../styles/Profile.module.css\";\nimport { UserProfileType } from \"../../../types/types\";\nimport MyPostsContainer from \"../MyPosts/MyPostsContainer\";\nimport {ProfileInfo} from \"../ProfileInfo/ProfileInfo\";\n\n\n\ntype ProfilePropsType = {\n  profile: UserProfileType | null\n  status: string\n  isOwner: boolean\n  updateStatus: (status: string) => void\n  saveProfile: (profile: UserProfileType) => Promise<any>\n  savePhoto: (file: File) => void\n}\n\nexport const Profile = (props: ProfilePropsType) => {\n  return (\n    <div className={style.mainContent}>\n      <ProfileInfo \n          saveProfile={props.saveProfile}\n          savePhoto={props.savePhoto} \n          isOwner={props.isOwner} \n          profile={props.profile} \n          status={props.status}  \n          updateStatus={props.updateStatus} \n          />\n      <MyPostsContainer   />\n    </div>\n  );\n}\n","import React from 'react' \nimport {connect} from 'react-redux'\nimport {StateType} from '../../redux/redux-store'\nimport {getProfile, getStatus, updateStatus, savePhoto, saveProfile} from '../../redux/profile-reducer'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\nimport {Profile} from './Profile/Profile'\nimport { compose } from 'redux'\nimport { UserProfileType } from '../../types/types'\n\n\nexport type mapStateToPropsType = {\n    profile: UserProfileType | null\n    isAuth: boolean\n    status: string\n    authorizedUserId: number \n}\nexport type DispatchPropsType = {\n    getProfile: (userId: number) => void\n    getStatus: (userId: number) => void\n    savePhoto: (file: File) => void\n    updateStatus:  (status: string) => void\n    saveProfile: (profile: UserProfileType) => Promise<any>\n}\n\ntype PathParamsProps = {\n    userId: string\n}\n\nexport type ProfileContainerProps = RouteComponentProps<PathParamsProps> & DispatchPropsType & mapStateToPropsType\n\nexport class  ProfileContainer extends React.Component<ProfileContainerProps> {\n    \n    updateProfile() {\n        let userId: number | null = +this.props.match.params.userId\n        if(!userId) {\n            userId = this.props.authorizedUserId\n            if (!userId) {\n                this.props.history.push('/login')\n                return\n            }\n        }\n        this.props.getProfile(userId)\n        this.props.getStatus(userId)\n    }\n    componentDidMount() {\n      this.updateProfile();\n    }\n    componentDidUpdate(prevProps: ProfileContainerProps) {\n        if(this.props.match.params.userId !== prevProps.match.params.userId)\n       this.updateProfile();\n    }\n    componentWillUnmount(): void {\n         \n    }\n\n    render() {\n        return (\n            <Profile {...this.props} \n                    savePhoto={this.props.savePhoto}\n                    isOwner={!this.props.match.params.userId}\n                    profile={this.props.profile}\n                    status={this.props.status}\n                    updateStatus={this.props.updateStatus}\n            />\n        )\n    }   \n}    \n\n\nlet mapStateToProps = (state: StateType) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n})\n\nexport default compose<React.ComponentType>(connect(mapStateToProps, {getProfile, getStatus, updateStatus, savePhoto, saveProfile }), \n    withRouter\n)(ProfileContainer)","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}"],"sourceRoot":""}